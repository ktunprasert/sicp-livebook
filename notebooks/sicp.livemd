# SICP

````elixir
Mix.install([
  {:kino, "~> 0.16.0"}
])

defmodule KinoGuide.RacketCell do
  use Kino.JS
  use Kino.JS.Live
  use Kino.SmartCell, name: "Racket script"

  @impl true
  def init(attrs, ctx) do
    source = attrs["source"] || ""

    {:ok, assign(ctx, source: source), editor: [source: source, language: "racket"]}
  end

  @impl true
  def handle_connect(ctx) do
    {:ok, %{}, ctx}
  end

  @impl true
  def handle_editor_change(source, ctx) do
    {:ok, assign(ctx, source: source)}
  end

  @impl true
  def to_attrs(ctx) do
    %{"source" => ctx.assigns.source}
  end

  @doc """
  Formats the output from System.cmd for Racket execution results.

  ## Parameters
  - `{output, exit_code}` when exit_code is an integer
  - `error` for any other case
  """
  def format_output({output, 0}) do
    Kino.Markdown.new("""
    ## ✅ Racket Execution Success

    ```
    #{String.trim(output)}
    ```
    """)
  end

  def format_output({output, status}) when is_integer(status) do
    Kino.Markdown.new("""
    ## ❌ Racket Execution Error (Exit Code: #{status})

    ```
    #{String.trim(output)}
    ```
    """)
  end

  def format_output(error) do
    Kino.Markdown.new("""
    ## ❌ System Error

    Failed to execute racket command: `#{inspect(error)}`
    """)
  end

  @impl true
  def to_source(attrs) do
    quote do
      System.cmd(
        "racket",
        ["-e", unquote(attrs["source"])],
        stderr_to_stdout: true
      )
      |> KinoGuide.RacketCell.format_output()
    end
    |> Kino.SmartCell.quoted_to_string()
  end

  asset "main.js" do
    """
    export function init(ctx, payload) {
      ctx.importCSS("main.css");

      root.innerHTML = `
        <div class="app">
          Racket script
        </div>
      `;
    }
    """
  end

  asset "main.css" do
    """
    .app {
      padding: 8px 16px;
      border: solid 1px #cad5e0;
      border-radius: 0.5rem 0.5rem 0 0;
      border-bottom: none;
    }
    """
  end
end

Kino.SmartCell.register(KinoGuide.RacketCell)
````

## Chapter 1

**Exercise 1.1**

<!-- livebook:{"attrs":"eyJzb3VyY2UiOiIxMFxuKCsgNSAzIDQpXG4oLSA5IDEpXG4oLyA2IDIpXG4oKyAoKiAyIDQpICgtIDQgNikpXG4oZGVmaW5lIGEgMylcbihkZWZpbmUgYiAoKyBhIDEpKVxuKCsgYSBiICgqIGEgYikpXG4oPSBhIGIpXG4oaWYgKGFuZCAoPiBiIGEpICg8IGIgKCogYSBiKSkpIGIgYSlcbihjb25kXG4gIFsoPSBhIDQpIDZdXG4gIFsoPSBiIDQpICgrIDYgNyBhKV1cbiAgW2Vsc2UgMjVdKVxuKCsgMiAoaWYgKD4gYiBhKSBiIGEpKVxuKCogKGNvbmRcbiAgICAgWyg+IGEgYikgYV1cbiAgICAgWyg8IGEgYikgYl1cbiAgICAgW2Vsc2UgLTFdKVxuICAgKCsgYSAxKSkifQ","chunks":null,"kind":"Elixir.KinoGuide.RacketCell","livebook_object":"smart_cell"} -->

```elixir
System.cmd(
  "racket",
  [
    "-e",
    "10\n(+ 5 3 4)\n(- 9 1)\n(/ 6 2)\n(+ (* 2 4) (- 4 6))\n(define a 3)\n(define b (+ a 1))\n(+ a b (* a b))\n(= a b)\n(if (and (> b a) (< b (* a b))) b a)\n(cond\n  [(= a 4) 6]\n  [(= b 4) (+ 6 7 a)]\n  [else 25])\n(+ 2 (if (> b a) b a))\n(* (cond\n     [(> a b) a]\n     [(< a b) b]\n     [else -1])\n   (+ a 1))"
  ],
  stderr_to_stdout: true
)
|> KinoGuide.RacketCell.format_output()
```

**Exercise 1.2**

<!-- livebook:{"attrs":"eyJzb3VyY2UiOiIoL1xuICAoKyA1IDQgKC0gMiAoLSAzICgrIDYgNC81KSkpKVxuICAoKiAzICgtIDYgMikgKC0gMiA3KSlcbikifQ","chunks":null,"kind":"Elixir.KinoGuide.RacketCell","livebook_object":"smart_cell"} -->

```elixir
System.cmd(
  "racket",
  ["-e", "(/\n  (+ 5 4 (- 2 (- 3 (+ 6 4/5))))\n  (* 3 (- 6 2) (- 2 7))\n)"],
  stderr_to_stdout: true
)
|> KinoGuide.RacketCell.format_output()
```

**Exercise 1.3**

<!-- livebook:{"attrs":"eyJzb3VyY2UiOiI7OyBvb3BzIGkgY2hlYXRlZFxuKGRlZmluZSAodG9wLXN1bS1zcSBhIGIgYylcbiAgKGRlZmluZSBsIChtYXggYSBiKSlcbiAgKGRlZmluZSByIChtYXggYiBjKSlcbiAgKCtcbiAgICAoKiBsIGwpXG4gICAgKCogciByKVxuICApXG4pXG5cbih0b3Atc3VtLXNxIDEgMiAzKVxuKHRvcC1zdW0tc3EgLTY5NDIwIDIgMykifQ","chunks":null,"kind":"Elixir.KinoGuide.RacketCell","livebook_object":"smart_cell"} -->

```elixir
System.cmd(
  "racket",
  [
    "-e",
    ";; oops i cheated\n(define (top-sum-sq a b c)\n  (define l (max a b))\n  (define r (max b c))\n  (+\n    (* l l)\n    (* r r)\n  )\n)\n\n(top-sum-sq 1 2 3)\n(top-sum-sq -69420 2 3)"
  ],
  stderr_to_stdout: true
)
|> KinoGuide.RacketCell.format_output()
```

<!-- livebook:{"attrs":"eyJzb3VyY2UiOiIoZGVmaW5lICh0b3Atc3VtLXNxIGEgYiBjKVxuICAoY29uZCBcbiAgIFsoYW5kICg+PSBhIGIpICg+PSBiIGMpKSAoKyAoKiBhIGEpICgqIGIgYikgKSBdXG4gICBbKGFuZCAoPj0gYSBjKSAoPj0gYyBiKSkgKCsgKCogYSBhKSAoKiBjIGMpICkgXVxuICAgWyhhbmQgKD49IGIgYSkgKD49IGEgYykpICgrICgqIGIgYikgKCogYSBhKSApIF1cbiAgIFsoYW5kICg+PSBiIGMpICg+PSBjIGEpKSAoKyAoKiBiIGIpICgqIGMgYykgKSBdXG4gICBbKGFuZCAoPj0gYyBhKSAoPj0gYSBiKSkgKCsgKCogYyBjKSAoKiBhIGEpICkgXVxuICAgWyhhbmQgKD49IGMgYikgKD49IGIgYSkpICgrICgqIGMgYykgKCogYiBiKSApIF1cbiAgKVxuKVxuXG4odG9wLXN1bS1zcSAxIDIgMyk7IHNob3VsZCBiZSAxM1xuKHRvcC1zdW0tc3EgLTYxMjMgMiAzKTsgc2hvdWxkIGJlIDEzIn0","chunks":null,"kind":"Elixir.KinoGuide.RacketCell","livebook_object":"smart_cell"} -->

```elixir
System.cmd(
  "racket",
  [
    "-e",
    "(define (top-sum-sq a b c)\n  (cond \n   [(and (>= a b) (>= b c)) (+ (* a a) (* b b) ) ]\n   [(and (>= a c) (>= c b)) (+ (* a a) (* c c) ) ]\n   [(and (>= b a) (>= a c)) (+ (* b b) (* a a) ) ]\n   [(and (>= b c) (>= c a)) (+ (* b b) (* c c) ) ]\n   [(and (>= c a) (>= a b)) (+ (* c c) (* a a) ) ]\n   [(and (>= c b) (>= b a)) (+ (* c c) (* b b) ) ]\n  )\n)\n\n(top-sum-sq 1 2 3); should be 13\n(top-sum-sq -6123 2 3); should be 13"
  ],
  stderr_to_stdout: true
)
|> KinoGuide.RacketCell.format_output()
```
